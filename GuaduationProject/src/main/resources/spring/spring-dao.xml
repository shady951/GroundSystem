<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	 			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 			xmlns:context="http://www.springframework.org/schema/context"
	 			xsi:schemaLocation="http://www.springframework.org/schema/beans 
	 			http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	 			http://www.springframework.org/schema/context
	 			http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 配置整合mybatis -->
	<!-- 数据库相关参数properties的属性 -->
	<context:property-placeholder location="classpath:jdbc.properties"/> 
	<!-- 数据库的连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="driverClass" value="${driver}"/>
		<property name="jdbcUrl" value="${url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${password}"/>
		<!-- c3p0连接池私有属性 -->
		<property name="maxPoolSize" value="30"/>
		<property name="minPoolSize" value="10"/>
		<!-- 关闭连接之后不自动提交 -->
		<property name="autoCommitOnClose" value="false"/>
		<!-- 获取连接超时时间，当应用占用连接超过1000ms时，
				自动释放该连接，默认为0（无限等待）可能会造成死锁 -->
		<property name="checkoutTimeout" value="1000"/>
		<!-- 当获取连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2"/>
	</bean>
	
	<!-- 配置sqlsessionfactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 配置mybatis全局配置文件：mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- 扫描entity包 使用别名 -->
		<property name="typeAliasesPackage" value="entity"/>
		<!-- 扫描sql配置文件：mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>
	
	<!-- 配置扫描Dao接口包，动态实现Dao接口（mybatis的动态代理） -->
	<!-- 不需要配置id，因为不需要被其他引用 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<!-- 注入sqlSessionFactory，name不用sqlSessionFactory是因为下面这个可以防止在datasource初始化之前初始化 -->
			<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
			<!-- 给出需要扫描Dao接口包 -->
			<property name="basePackage" value="dao"></property>
			
	</bean>
	
</beans>

